.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Webdhcp_Server 3"
.TH Webdhcp_Server 3 "2013-06-11" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SS "\s-1NAME\s0"
.IX Subsection "NAME"
Webdhcp \- Add, Delete, Modify and Sort \s-1DHCP\s0 database
.SS "\s-1SYNOPSIS\s0"
.IX Subsection "SYNOPSIS"
.Vb 6
\&        use lib "/location/of/script"
\&        use Webdhcp_Server;
\&        $object = new Webdhcp_Server;
\&        $object\->changeip("AA:BB:CC:00:DD:FF", "10.0.3.1");
\&        $object\->changemac("AA:BB:CC:00:DD:FF", "AA:BB:CC:00:D7:55");
\&        $object\->add("HP5\-PAYROLL","00:08:AD:CB:DE:F6", "10.2.5.10");
.Ve
.SS "\s-1DESCRIPTION\s0"
.IX Subsection "DESCRIPTION"
.Vb 10
\& Webdhcpd is an application that uses encryption, logging, and documentation 
\& to add, delete, and modify entries in the DHCP config file. Please note that 
\& this program assumes that you are using ISC DHCPD Version 2.0pl5 or ealier. 
\& Unfortunately, the program also assumes that you have some form of clear text 
\& documentation on the web server that has a list of all reserved IP addresses. 
\& I have included an example in this distribution. I will provide a simple script 
\& that will generate this documentation from your "dhcpd.conf" file in the future. 
\& You should be able to query the dhcpd.conf and dhcpd.leases files from the web 
\& without the documentation files, however, you should consider modifying the 
\& script to meet your environment.
.Ve
.SS "\s-1FUNCTIONS\s0"
.IX Subsection "FUNCTIONS"
.IP "lookup_host" 4
.IX Item "lookup_host"
.Vb 2
\& Queries the database file (which is read into the object as a hash
\& in memory), for either the hardware address, ip address, or the hostname
\&
\& Arguments: 1. object type (mac, ip, hn)
\&            2. query string 
\& Return: returns hostname string, or returns 0 for failure
\& Example: lookup_host(hn,"BB477_HP5") or lookup_host(ip,"127.0.0.1")
.Ve
.IP "delete" 4
.IX Item "delete"
.Vb 1
\& This function deletes a desired block out of the config file.
\&
\& Arguments: 1. Type (mac address, ip address, or hn \-hostname)
\& Return: returns returns 1 for success, or 0 for failure
\& Example: delete(hn,"BB477_HP5")
.Ve
.IP "changeip" 4
.IX Item "changeip"
.Vb 2
\& This function changes the IP address of a particular device. It can be
\& used a function to move a device to a new subnet.
\&
\& Arguments: 1. The mac address
\&            2. The new IP address to be assigned
\& Return: returns returns 1 for success, or 0 for failure
\& Example: changeip(aa:bb:cc:dd:ee:ff, 192.168.4.32)
.Ve
.IP "changemac" 4
.IX Item "changemac"
.Vb 1
\& This function changes the mac address of a particular device. 
\&
\& Arguments: 1. The original mac address
\&            2. The new mac address
\& Return: returns returns 1 for success, or 0 for failure
\& Example: changemac(aa:bb:cc:dd:ee:ff, aa:bb:cc:dd:cc:cc)
.Ve
.IP "getblock" 4
.IX Item "getblock"
.Vb 3
\& This function returns the desired block of data from the config file in 
\& the form of an array. An argument of 0 or 1 is required. If an argument of 1
\& is passed, then an array is returned containing all *but* the passed hostname. 
\&
\& Arguments: 1.  0 \- returns an array of desired block (*default*)
\&                1 \- returns an array of all but desired block
\&            2. The hostname 
\& Return: returns an array based on the passed value, or returns 0 for failure
\& Example: changemac(0, BB477_HP5)
.Ve
.IP "del_lease" 4
.IX Item "del_lease"
.Vb 1
\& This function deletes the desired entry out of the leases file.
\&
\& Arguments: 1. The mac address
\& Return: Returns an array based on the passed value, or returns 0 for failure
\& Example: del_lease(0, BB477_HP5)
.Ve
.IP "add" 4
.IX Item "add"
.Vb 1
\& This function adds a block to the config file based on parameters.
\&
\& Arguments: 1. Hostname (Required)
\&            2. Mac Address (Required)
\&            3. IP Address (Required)
\& Return: Returns 1 for success, and 0 for failure
.Ve
.SS "\s-1AUTHORS\s0"
.IX Subsection "AUTHORS"
.Vb 1
\& Michael Lewis (mlewis@mailops.com)
.Ve
.SS "\s-1CREDITS\s0"
.IX Subsection "CREDITS"
.Vb 1
\& Thomas Akin, CISSP \-   helped with the encryption on the backend
\&
\& Borek Lupomesky    \-   who\*(Aqs "dhcplst.pl" program provided me with the 
\&                        idea of storing DHCP objects into hashes
.Ve
.SS "\s-1SEE\s0 \s-1ALSO\s0"
.IX Subsection "SEE ALSO"
.Vb 1
\& perl(1)
.Ve
